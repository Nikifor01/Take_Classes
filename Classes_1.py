
class Point:
    '''
    Таким образом можно сделать документацию для класса,
    которую потом можно вызвать отельным методом
    '''


    #Атрибуты класса, они есть только в самом классе

    x = 0
    y = 0

    #метод класса
    def ret(self):
        return (self.x, self.y)

#Экземпляр класса
p = Point()

#Метод ret возвращает атрибуты класса
print(p.ret())
#Внутри экземпляра р своих атрибутов не создаётся
print(p.__dict__)
#Добавили локальный атрибут класса в экземпляр
p.z = 0
#Что видно при вызове метода dict

p.x = 5
print(p.__dict__)


print(Point.x)

del p.z
print(p.__dict__)

print(Point.__doc__)


'''
Итак здесь мы определили класс Point, в нём у нас два атрибута х и у, 
метод ret возвращает кортеж со значениями х и у

ТУТ ВАЖНО ЗАПОНИТЬ СЛЕДУЮЩЕЕ:
x и y в классе point это x и y в классе point
в экземпляре p они уже определяются локально для этого класса, если и присваиваются новые значения
и берутся из класса поинт если они остаются такими же какими и были

self это ссылка на экземпляр класса

чтобы удалить атрибут из экземпляра класса нужно воспользоваться командой del
'''